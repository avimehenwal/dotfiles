---
tags: [typescript, type, frontend]
---
# types
In Typescript, it’s better to think of a type as a set of values that share something in common.
Because types are just sets, a particular value can belong to many sets at the same time.

objects are not of a single exact type
For example, if we construct an object that satisfies an interface
we can use that object where that interface is expected even though there was no declarative relationship between the two.

TypeScript’s type system is structural, not nominal(existing in name only)

If the structures of these classes are the same but have different names, they could be used interchangeably

# Default values to function parameters
You cannot provide default values for interfaces or type aliases
as they are compile time only and default values need runtime support

# Difference b/w types and classes?
Types are primitives, classes are user defined Model of data
https://stackoverflow.com/questions/468145/what-is-the-difference-between-type-and-class
